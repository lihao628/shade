/**
 * This file was automatically generated by @cosmwasm/ts-codegen@0.35.3.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */

export type ExecuteMsg = {
  receive: Snip20ReceiveMsg;
};
export type Uint128 = string;
export type Binary = string;
export interface Snip20ReceiveMsg {
  amount: Uint128;
  from: string;
  memo?: string | null;
  msg?: Binary | null;
  sender: string;
}
export type Addr = string;
export type RewardsDistributionAlgorithm =
  | "time_based_rewards"
  | "volume_based_rewards";
export type TokenType =
  | {
      custom_token: {
        contract_addr: Addr;
        token_code_hash: string;
      };
    }
  | {
      native_token: {
        denom: string;
      };
    };
export interface InstantiateMsg {
  active_id: number;
  admin_auth: RawContract;
  bin_step: number;
  entropy: string;
  epoch_staking_duration: number;
  epoch_staking_index: number;
  expiry_staking_duration?: number | null;
  factory: ContractInfo;
  lb_token_implementation: ContractInstantiationInfo;
  pair_parameters: StaticFeeParameters;
  protocol_fee_recipient: Addr;
  recover_staking_funds_receiver: Addr;
  rewards_distribution_algorithm: RewardsDistributionAlgorithm;
  staking_contract_implementation: ContractInstantiationInfo;
  token_x: TokenType;
  token_y: TokenType;
  total_reward_bins?: number | null;
  viewing_key: string;
}
export interface RawContract {
  address: string;
  code_hash: string;
}
export interface ContractInfo {
  address: Addr;
  code_hash?: string;
  [k: string]: unknown;
}
export interface ContractInstantiationInfo {
  code_hash: string;
  id: number;
}
export interface StaticFeeParameters {
  base_factor: number;
  decay_period: number;
  filter_period: number;
  max_volatility_accumulator: number;
  protocol_share: number;
  reduction_factor: number;
  variable_fee_control: number;
}
export type QueryMsg =
  | {
      get_staking_contract: {};
    }
  | {
      get_lb_token: {};
    };
